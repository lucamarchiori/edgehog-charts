# -- namespace of the Edgehog deployment. By default everything is deployed to the edgehog namespace in the Kubernetes cluster, but Edgehog can be deployed in any namespace
namespace: "edgehog-dev"

database:
  # -- hostname of the PostgreSQL database.
  hostname: "postgres-postgresql.edgehog-dev.svc.cluster.local"

backend:
  # -- host of the Edgehog backend
  host: "api.edgehog.customdomain.com"
  # -- maxUploadSizeBytes is the maximum dimension for uploads, particularly relevant for OTA updates. If omitted, it defaults to 4 Gigabytes.
  maxUploadSizeBytes: 2048 

frontend:
  # -- host of the frontend
  host: "edgehog.customdomain.com"

deviceForwarder:
  # -- host of the device forwarder. It should only contain the hostname without the http:// or https:// scheme
  host: "forwarder.edgehog.customdomain.com"
  # -- port for the instance of Edgehog Device Forwarder. It defaults to 443
  port: 443
  # -- secureSessions can be either true or false, it indicates whether devices use TLS to connect to the Edgehog Device Forwarder
  secureSessions: true

letsencrypt:
  # -- email address that will be used for the ACME account for LetsEncrypt
  email: "admin@example.com"

s3:
  # -- provider of S3 storage. Curretnly can be set to "gcp"  (Google Cloud) or " minio" 
  provider: "minio"
  # -- scheme (http or https) for the S3 storage
  scheme: "http"
  # -- host for the S3 storage
  host: "test"
  # -- port for the S3 storage. This has to be put in double quotes to force it to be interpreted as a string.
  port: "test"
  # -- bucket name for the S3 storage.
  bucket: "test"
  # -- assetHost for the S3 storage, e.g. storage.googleapis.com/<S3-BUCKET> for GCP or <S3-BUCKET>.s3.amazonaws.com for AWS.
  assetHost: "test"
  # -- region where the S3 storage resides.
  region: "test"

enabledSecrets:
  ipbase: false
  googleGeolocation: false
  googleGeocoding: false

astarte:
  # -- apiDomain is the domain where Astarte APIs are reachable.
  apiDomain: "http://api.astarte.customdomain.com"
  # -- realm must match the name of the Realm created in Astarte and accessible at apiDomain
  realm: "test"
  # -- seedsRealmPrivateKeyFile is the path to the realm's private key file (e.g. test_private.pem)
  realmPrivateKeyFile: "../test_private.pem"
  # -- tenantPrivateKeyFile is the path to the tenant's private key file (e.g. acme_private.pem)
  tenantPrivateKeyFile: "../acme_private.pem"